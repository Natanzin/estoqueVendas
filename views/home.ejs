<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <!-- Seus metadados e links para estilos aqui -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <style>
    body {
      background-color: #f8f9fa;
    }

    /* Cabeçalho */
    header {
      background-color: #343a40;
      color: #fff;
      padding: 15px 20px;
      text-align: center;
      position: relative;
    }

    .logoff-btn {
      position: absolute;
      top: 50%;
      right: 20px;
      transform: translateY(-50%);
    }

    /* Menu Lateral */
    nav {
      background-color: #007bff;
      color: #fff;
      height: 100vh;
      padding-top: 20px;
    }

    nav a {
      color: #fff;
      text-decoration: none;
    }

    /* Conteúdo Principal */
    main {
      padding: 20px;
    }

    .welcome-msg {
      font-size: 24px;
      font-weight: bold;
      margin-bottom: 20px;
    }

    /* Dashboard Cards */
    .dashboard-card {
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      padding: 20px;
      margin-bottom: 20px;
    }

    .card-title {
      font-size: 18px;
      font-weight: bold;
      margin-bottom: 10px;
    }

    .card-value {
      font-size: 24px;
      font-weight: bold;
    }
  </style>
</head>

<body>

  <!-- Cabeçalho -->
  <header>
    <h1 class="h3">Bem-vindo, <%=username%>!</h1>
    <button class="btn btn-danger logoff-btn" onclick="logout()">Logoff</button>
  </header>

  <!-- Container para layout -->
  <div class="container-fluid">
    <div class="row">

      <!--Inclusão do menu lateral-->
      <%- include('menu_lateral.ejs') %>

        <!-- Conteúdo Principal -->
        <main class="col-md-9 ms-sm-auto col-lg-10">
          <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
            <h2 class="h3">Dashboard</h2>
          </div>

          <!-- Exemplo de Cards do Dashboard -->
          <div class="row row-cols-1 row-cols-md-3 g-4">
            <!-- Card Vendas Mensais -->
            <div class="col">
              <div class="dashboard-card">
                <div class="card-title">Vendas Mensais</div>
                <div>
                  <label for="selectYear">Selecionar Ano:</label>
                  <select id="selectYear" class="form-select mb-3" onchange="updateSalesData()">
                    <!-- A função populateYearOptions preencherá este campo -->
                  </select>
                </div>
                <div class="card-value" id="totalSales">Total: R$ 0</div>
                <div id="monthlySales">
                  <!-- Os dados de vendas mensais serão exibidos aqui -->
                  <!-- Cada mês terá um elemento div com o total de vendas -->
                </div>
              </div>
            </div>
            <!-- Adicione mais cards conforme necessário -->
          </div>
        </main>

    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Obtenha o nome do usuário da sessão (você pode ajustar conforme necessário)
    //const username = sessionStorage.getItem('usuario.username');

    // Preencha o nome do usuário no cabeçalho
    //document.getElementById('username').innerText = username || 'Usuário Desconhecido';

    // Função para fazer logout
    async function logout() {
      try {
        // Fazer uma requisição para a rota /logout no servidor
        const response = await fetch('/logout', { method: 'GET' });

        if (response.ok) {
          // Se a resposta foi bem-sucedida, você pode lidar com o redirecionamento aqui
          alert('Usuário deslogado!');
          window.location.href = '/'; // ou a URL que seu servidor retorna para redirecionamento
        } else {
          // Se a resposta não foi bem-sucedida, trata como um erro
          alert('Erro ao fazer logout. Status: ' + response.status);
        }
      } catch (error) {
        console.error('Erro:', error);
        alert('Erro ao fazer logout. Consulte o console para mais detalhes.');
      }
    }

    // Função para obter o ano atual
    function getCurrentYear() {
      return new Date().getFullYear();
    }

    // Função para preencher os anos no campo selectYear
    function populateYearOptions() {
      const selectYear = document.getElementById('selectYear');
      const currentYear = getCurrentYear();

      for (let i = currentYear + 10; i >= currentYear - 20; i--) {
        const option = document.createElement('option');
        option.value = i;
        option.innerText = i;
        if (i === currentYear) {
          option.selected = true; // Marcar o ano atual como "selected"
        }
        selectYear.appendChild(option);
      }
    }

    // Dados fictícios de vendas por ano e mês
    const salesData = [
      { year: 2023, month: 'Janeiro', value: 5000 },
      { year: 2023, month: 'Fevereiro', value: 6000 },
      { year: 2023, month: 'Março', value: 7500 },
      { year: 2022, month: 'Janeiro', value: 4800 },
      { year: 2022, month: 'Fevereiro', value: 5500 },
      { year: 2022, month: 'Março', value: 7200 },
      { year: 2021, month: 'Janeiro', value: 4500 },
      { year: 2021, month: 'Fevereiro', value: 5200 },
      { year: 2021, month: 'Março', value: 6800 },
      // Adicione mais dados conforme necessário
    ];

    // Função para atualizar os dados de vendas ao selecionar um ano diferente
    function updateSalesData() {
      const selectedYear = document.getElementById('selectYear').value;

      // Filtrar os dados para o ano selecionado
      const yearSales = salesData.filter(data => data.year == selectedYear);

      // Atualize o total de vendas
      const totalSalesElement = document.getElementById('totalSales');
      const totalSales = yearSales.reduce((acc, data) => acc + data.value, 0);
      totalSalesElement.innerText = `Total: R$ ${totalSales}`;

      // Atualize os dados de vendas mensais
      const monthlySalesElement = document.getElementById('monthlySales');
      monthlySalesElement.innerHTML = '';

      for (const { month, value } of yearSales) {
        const monthElement = document.createElement('div');
        monthElement.innerText = `${month}: R$ ${value}`;
        monthlySalesElement.appendChild(monthElement);
      }
    }

    // Configurar o ano atual como padrão e preencher as opções do ano
    document.addEventListener('DOMContentLoaded', function () {
      const currentYear = getCurrentYear();
      const selectYear = document.getElementById('selectYear');
      populateYearOptions(); // Preencher opções do ano
      updateSalesData(); // Atualizar dados ao carregar a página
    });
  </script>
</body>

</html>